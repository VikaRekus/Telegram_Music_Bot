import re
import os
import urllib

from moviepy.editor import *
import telebot
import sqlite3
import random
from telebot import types
#from selenium import webdriver
import time
from youtubesearchpython import VideosSearch
from pytube import YouTube
import pytube

import logging

#driver = webdriver.Chrome()
bot = telebot.TeleBot('6077503747:AAG2VNsh3fXjhFrENc7gLze7mAJ7H5zibpA')


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("üé∂ –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É")
    btn3 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –º—É–∑—ã–∫—É".format(message.from_user),
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
def inline_key(message):
    if message.text == "/start":
        bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!))')

    elif message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ–µ–µ—Ç. –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å)")

    elif message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)

    elif message.text == "üé∂ –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ù–∞–π—Ç–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é")
        btn2 = types.KeyboardButton("–ü–µ—Å–Ω—è –Ω–∞ –≤—ã–±–æ—Ä –±–æ—Ç–∞")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=markup)

    elif message.text == "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?":
        bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏....")

    elif message.text == "–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?":
        bot.send_message(message.chat.id, text="–ú–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –ø–µ—Å–Ω—é, –∞ –º–æ–≥—É –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å —Å–≤–æ—éüòú")

    elif message.text == "–ù–∞–π—Ç–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é":
        sm = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏")
        bot.register_next_step_handler(sm, search)

    elif message.text == "–ü–µ—Å–Ω—è –Ω–∞ –≤—ã–±–æ—Ä –±–æ—Ç–∞":
        bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...")
        time.sleep(3)
        sqlite_connection = sqlite3.connect('MyDB3.db')
        cursor = sqlite_connection.cursor()

        sqlite_select_query = """SELECT * from links"""
        cursor.execute(sqlite_select_query)
        records = cursor.fetchall()
        downloaded =False
        while not downloaded:
            try:
                row = random.choice(records)
                downloading(row[1], message)
                downloaded = True
            except Exception as e:
                print(e, row[1])

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("üé∂ –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É")
        button3 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        markup.add(button1, button2, button3)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)

    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω((....")


def search(message):
    bot.send_message(message.chat.id, "–ò—â–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...")
    #result = YouTubeMusicAPI.search(message.text)
    #bot.send_message(message.chat.id, result["url"])
    #downloading(result["url"])
    # video_href = "https://www.youtube.com/results?search_query=" + message.text
    # driver.get(video_href)
    # sleep(2)
    # videos = driver.find_elements(by="video-title")
    result = VideosSearch(message.text, limit=1).result()
    for i in range(len(result["result"])):
        try:
            downloading(result["result"][i]["link"], message)
        except pytube.exceptions.VideoUnavailable as e:
            print(e, result["result"][i]["link"])

            bot.send_message(message.chat.id, '–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å ‚òπÔ∏è' + result["result"][i]["link"])
            bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ...")
        except Exception as e:
            print(e, result["result"][i]["link"])

    #    # bot.send_message(message.chat.id, videos[i].get_attribute("href"))
    #    # bot.send_message(message.chat.id, result["result"][i]["link"])
    #    if i == 1:
    #        break


def retry(link, message):
    for i in range(10):
        try:
            print(f'Try #: {i}')
            downloading(link, message)
            return True
        except:
             return False


def downloading(link, message):
    my_video = YouTube(link)
    path = my_video.streams.filter(only_audio=True).first().download()
    video = open(path, 'rb')
    print(path)
    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω... ' + link)
    bot.send_audio(message.chat.id, video)


bot.polling()
